png(filename="Cars04.png")
par(bg = "grey")
plot(qu,ex,pch=22,xlab = "HP",ylab = "City MPG", main = 'City MPG vs HP of Cars of Different Types and Weights', cex=w/1500, bg=x$Color)
dev.off()
x <- read.table("cars04.csv",header=T,sep=",")
str(x)
ex <- as.numeric(as.character(x$City.MPG))
qu <- as.numeric(as.character(x$HP))
w <- as.numeric(as.character(x$Weight))
x$Color = "red"
x$Color[x$Small.Sporty..Compact.Large.Sedan == 1] = "green"
x$Color[x$Sports.car == 1] = "yellow"
x$Color[x$SUV == 1] = "blue"
x$Color[x$Wagon == 1] = "red"
x$Color[x$Minivan == 1] = "cyan"
x$Color[x$Pickup == 1] = "purple"
png(filename="Cars04.png")
par(bg = "grey")
plot(qu,ex,pch=22,xlab = "HP",ylab = "City MPG", main = 'City MPG vs HP of Cars of Different Types and Weights', cex=w/1500, bg=x$Color)
dev.off()
x <- read.table("cars04.csv",header=T,sep=",")
str(x)
ex <- as.numeric(as.character(x$City.MPG))
qu <- as.numeric(as.character(x$HP))
w <- as.numeric(as.character(x$Weight))
x$Color = "red"
x$Color[x$Small.Sporty..Compact.Large.Sedan == 1] = "green"
x$Color[x$Sports.car == 1] = "yellow"
x$Color[x$SUV == 1] = "blue"
x$Color[x$Wagon == 1] = "red"
x$Color[x$Minivan == 1] = "cyan"
x$Color[x$Pickup == 1] = "purple"
png(filename="Cars04.png")
par(bg = "grey")
plot(qu,ex,pch=22,xlab = "HP",ylab = "City MPG", main = 'City MPG vs HP of Cars of Different Types and Weights', cex=w/1500, bg=x$Color)
dev.off()
x <- read.table("cars04.csv",header=T,sep=",")
str(x)
ex <- as.numeric(as.character(x$City.MPG))
qu <- as.numeric(as.character(x$HP))
w <- as.numeric(as.character(x$Weight))
x$Color = "black"
x$Color[x$Small.Sporty..Compact.Large.Sedan == 1] = "green"
x$Color[x$Sports.car == 1] = "yellow"
x$Color[x$SUV == 1] = "blue"
x$Color[x$Wagon == 1] = "red"
x$Color[x$Minivan == 1] = "cyan"
x$Color[x$Pickup == 1] = "purple"
png(filename="Cars04.png")
par(bg = "grey")
plot(qu,ex,pch=22,xlab = "HP",ylab = "City MPG", main = 'City MPG vs HP of Cars of Different Types and Weights', cex=w/1500, bg=x$Color)
dev.off()
x <- read.table("cars04.csv",header=T,sep=",")
str(x)
ex <- as.numeric(as.character(x$City.MPG))
qu <- as.numeric(as.character(x$HP))
w <- as.numeric(as.character(x$Weight))
x$Color = "black"
x$Color[x$Small.Sporty..Compact.Large.Sedan == 1] = "green"
x$Color[x$Sports.Car == 1] = "yellow"
x$Color[x$SUV == 1] = "blue"
x$Color[x$Wagon == 1] = "red"
x$Color[x$Minivan == 1] = "cyan"
x$Color[x$Pickup == 1] = "purple"
png(filename="Cars04.png")
par(bg = "grey")
plot(qu,ex,pch=22,xlab = "HP",ylab = "City MPG", main = 'City MPG vs HP of Cars of Different Types and Weights', cex=w/1500, bg=x$Color)
dev.off()
x <- read.table("cars04.csv",header=T,sep=",")
str(x)
ex <- as.numeric(as.character(x$City.MPG))
qu <- as.numeric(as.character(x$HP))
w <- as.numeric(as.character(x$Weight))
x$Color = "black"
x$Color[x$Small.Sporty..Compact.Large.Sedan == 1] = "green"
x$Color[x$Sports.Car == 1] = "yellow"
x$Color[x$SUV == 1] = "blue"
x$Color[x$Wagon == 1] = "red"
x$Color[x$Minivan == 1] = "cyan"
x$Color[x$Pickup == 1] = "purple"
png(filename="Cars04.png")
par(bg = "grey")
plot(qu,ex,pch=22,xlab = "HP",ylab = "City MPG", main = 'City MPG vs HP of Cars of Different Types and Weights', cex=w/1500, bg=x$Color)
dev.off()
x <- read.table("cars04.csv",header=T,sep=",")
str(x)
ex <- as.numeric(as.character(x$City.MPG))
qu <- as.numeric(as.character(x$HP))
w <- as.numeric(as.character(x$Weight))
x$Color = "black"
x$Color[x$Small.Sporty..Compact.Large.Sedan == 1] = "green"
x$Color[x$Sports.Car == 1] = "yellow"
x$Color[x$SUV == 1] = "blue"
x$Color[x$Wagon == 1] = "red"
x$Color[x$Minivan == 1] = "cyan"
x$Color[x$Pickup == 1] = "purple"
png(filename="Cars04.png")
par(bg = "grey")
plot(qu,ex,pch=22,xlab = "HP",ylab = "City MPG", main = 'City MPG vs HP of Cars of Different Types and Weights', cex=w/1500, bg=x$Color)
dev.off()
x <- read.table("cars04.csv",header=T,sep=",")
str(x)
ex <- as.numeric(as.character(x$City.MPG))
qu <- as.numeric(as.character(x$HP))
w <- as.numeric(as.character(x$Weight))
x$Color = "black"
x$Color[x$Small.Sporty..Compact.Large.Sedan == 1] = "green"
x$Color[x$Sports.Car == 1] = "yellow"
x$Color[x$SUV == 1] = "blue"
x$Color[x$Wagon == 1] = "red"
x$Color[x$Minivan == 1] = "cyan"
x$Color[x$Pickup == 1] = "black"
png(filename="Cars04.png")
par(bg = "grey")
plot(qu,ex,pch=22,xlab = "HP",ylab = "City MPG", main = 'City MPG vs HP of Cars of Different Types and Weights', cex=w/1500, bg=x$Color)
dev.off()
x <- read.table("cars04.csv",header=T,sep=",")
str(x)
ex <- as.numeric(as.character(x$City.MPG))
qu <- as.numeric(as.character(x$HP))
w <- as.numeric(as.character(x$Weight))
x$Color = "black"
x$Color[x$Small.Sporty..Compact.Large.Sedan == 1] = "green"
x$Color[x$Sports.Car == 1] = "red"
x$Color[x$SUV == 1] = "blue"
x$Color[x$Wagon == 1] = "yellow"
x$Color[x$Minivan == 1] = "cyan"
x$Color[x$Pickup == 1] = "black"
png(filename="Cars04.png")
par(bg = "grey")
plot(qu,ex,pch=22,xlab = "HP",ylab = "City MPG", main = 'City MPG vs HP of Cars of Different Types and Weights', cex=w/1500, bg=x$Color)
dev.off()
args <- commandArgs()
x <- read.table(args[4],header=T,sep=",")
str(x)
ex <- as.numeric(as.character(x$City.MPG))
qu <- as.numeric(as.character(x$HP))
w <- as.numeric(as.character(x$Weight))
x$Color = "black"
x$Color[x$Small.Sporty..Compact.Large.Sedan == 1] = "green"
x$Color[x$Sports.Car == 1] = "red"
x$Color[x$SUV == 1] = "blue"
x$Color[x$Wagon == 1] = "yellow"
x$Color[x$Minivan == 1] = "cyan"
x$Color[x$Pickup == 1] = "black"
png(filename="Cars04.png")
par(bg = "grey")
plot(qu,ex,pch=22,xlab = "HP",ylab = "City MPG", main = 'City MPG vs HP of Cars of Different Types and Weights', cex=w/1500, bg=x$Color)
dev.off()
args <- commandArgs()
x <- read.table(args[4],header=T,sep=",")
str(x)
ex <- as.numeric(as.character(x$City.MPG))
qu <- as.numeric(as.character(x$HP))
w <- as.numeric(as.character(x$Weight))
x$Color = "black"
x$Color[x$Small.Sporty..Compact.Large.Sedan == 1] = "green"
x$Color[x$Sports.Car == 1] = "red"
x$Color[x$SUV == 1] = "blue"
x$Color[x$Wagon == 1] = "yellow"
x$Color[x$Minivan == 1] = "cyan"
x$Color[x$Pickup == 1] = "black"
#png(filename="Cars04.png")
par(bg = "grey")
plot(qu,ex,pch=22,xlab = "HP",ylab = "City MPG", main = 'City MPG vs HP of Cars of Different Types and Weights', cex=w/1500, bg=x$Color)
#dev.off()
#args <- commandArgs()
#x <- read.table(args[4],header=T,sep=",")
x <- read.table("iris.csv",header=T,sep=",")
str(x)
ex <- as.numeric(as.character(x$City.MPG))
qu <- as.numeric(as.character(x$HP))
w <- as.numeric(as.character(x$Weight))
#png(filename="Cars04.png")
par(bg = "grey")
plot(qu,ex,pch=22,xlab = "HP",ylab = "City MPG", main = 'City MPG vs HP of Cars of Different Types and Weights', cex=w/1500, bg=x$Color)
#dev.off()
#args <- commandArgs()
#x <- read.table(args[4],header=T,sep=",")
x <- read.table("cars04.csv",header=T,sep=",")
str(x)
ex <- as.numeric(as.character(x$City.MPG))
qu <- as.numeric(as.character(x$HP))
w <- as.numeric(as.character(x$Weight))
x$Color = "black"
x$Color[x$Small.Sporty..Compact.Large.Sedan == 1] = "green"
x$Color[x$Sports.Car == 1] = "red"
x$Color[x$SUV == 1] = "blue"
x$Color[x$Wagon == 1] = "yellow"
x$Color[x$Minivan == 1] = "cyan"
x$Color[x$Pickup == 1] = "black"
#png(filename="Cars04.png")
par(bg = "grey")
plot(qu,ex,pch=22,xlab = "HP",ylab = "City MPG", main = 'City MPG vs HP of Cars of Different Types and Weights', cex=w/1500, bg=x$Color)
#dev.off()
x <- read.table("iris.csv",header=T,sep=",")
#args <- commandArgs()
#x <- read.table(args[4],header=T,sep=",")
x <- read.table("iris.csv",header=T,sep=",")
str(x)
#png(filename="Cars04.png")
temp.gly <- glyphs(x$sepal.length,x$sepal.width,x$petal.length, x$petal.width, "long", "day", "lat", "surftemp", height=2.5)
ggplot2::ggplot(temp.gly, ggplot2::aes(gx, gy, group = gid)) +
add_ref_lines(temp.gly, color = "grey90") +
add_ref_boxes(temp.gly, color = "grey90") +
ggplot2::geom_path() +
ggplot2::theme_bw() +
ggplot2::labs(x = "", y = "")
#dev.off()
#args <- commandArgs()
#x <- read.table(args[4],header=T,sep=",")
x <- read.table("iris.csv",header=T,sep=",")
str(x)
#png(filename="Cars04.png")
temp.gly <- glyphs(x$sepal.length,x$sepal.width,x$petal.length, x$petal.width, "long", "day", "lat", "surftemp", height=2.5)
ggplot2::ggplot(temp.gly, ggplot2::aes(gx, gy, group = gid)) +
add_ref_lines(temp.gly, color = "grey90") +
add_ref_boxes(temp.gly, color = "grey90") +
ggplot2::geom_path() +
ggplot2::theme_bw() +
ggplot2::labs(x = "", y = "")
#dev.off()
install.packages("GGally")
library("GGally", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
#args <- commandArgs()
#x <- read.table(args[4],header=T,sep=",")
x <- read.table("iris.csv",header=T,sep=",")
str(x)
#png(filename="Cars04.png")
temp.gly <- glyphs(x$sepal.length,x$sepal.width,x$petal.length, x$petal.width, "long", "day", "lat", "surftemp", height=2.5)
ggplot2::ggplot(temp.gly, ggplot2::aes(gx, gy, group = gid)) +
add_ref_lines(temp.gly, color = "grey90") +
add_ref_boxes(temp.gly, color = "grey90") +
ggplot2::geom_path() +
ggplot2::theme_bw() +
ggplot2::labs(x = "", y = "")
#dev.off()
detach("package:GGally", unload=TRUE)
library("GGally", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
detach("package:GGally", unload=TRUE)
library("GGally", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
detach("package:GGally", unload=TRUE)
library(dplyr)
# ozone
data_ozone <- list()
for(i in 1:(24*24)){
col_number <- (i-1) %% 24 + 1
row_number <- (i-1) %/% 24 + 1
data_ozone[[i]] <- as.vector(nasa$mets$ozone[col_number,row_number,,])
}
glyphs_ozone <- make_glyphs(data = data_ozone, width = c(1,12,1), height = c(1,1,6),
glyph_type = "Keim", type = "pixmap")
x <- getGridXY(length(glyphs_ozone))
plot_glyphs(x, glyphs = glyphs_ozone, type = "pixmap")
# rainbow color
glyphs_rainbow <- make_glyphs(data = data_temperature[1:25], width = c(1,12,1), height = c(1,1,6), cols = rainbow(3),
glyph_type = "Keim")
x <- getGridXY(length(glyphs_rainbow))
x[,1] <- x[,1]/ceiling(max(x[,1]))
x[,2] <- x[,2]/ceiling(max(x[,2]))
plot_glyphs(x, glyphs = glyphs_rainbow, type = "grid")
library("GGally", lib.loc="~/R/x86_64-pc-linux-gnu-library/3.4")
#args <- commandArgs()
#x <- read.table(args[4],header=T,sep=",")
x <- read.table("iris.csv",header=T,sep=",")
str(x)
#png(filename="Cars04.png")
temp.gly <- glyphs(nasaLate, "long", "day", "lat", "surftemp", height=2.5)
ggplot2::ggplot(temp.gly, ggplot2::aes(gx, gy, group = gid)) +
add_ref_lines(temp.gly, color = "grey90") +
add_ref_boxes(temp.gly, color = "grey90") +
ggplot2::geom_path() +
ggplot2::theme_bw() +
ggplot2::labs(x = "", y = "")
#dev.off()
#args <- commandArgs()
#x <- read.table(args[4],header=T,sep=",")
x <- read.table("iris.csv",header=T,sep=",")
str(x)
#png(filename="Cars04.png")
temp.gly <- glyphs(x$sepal.length,x$sepal.width,x$petal.length,x$petal.width, "long", "day", "lat", "surftemp", height=2.5)
ggplot2::ggplot(temp.gly, ggplot2::aes(gx, gy, group = gid)) +
add_ref_lines(temp.gly, color = "grey90") +
add_ref_boxes(temp.gly, color = "grey90") +
ggplot2::geom_path() +
ggplot2::theme_bw() +
ggplot2::labs(x = "", y = "")
#dev.off()
data(nasa)
nasaLate <- nasa[
nasa$date >= as.POSIXct("1998-01-01") &
nasa$lat >= 20 &
nasa$lat <= 40 &
nasa$long >= -80 &
nasa$long <= -60
, ]
temp.gly <- glyphs(nasaLate, "long", "day", "lat", "surftemp", height=2.5)
ggplot2::ggplot(temp.gly, ggplot2::aes(gx, gy, group = gid)) +
add_ref_lines(temp.gly, color = "grey90") +
add_ref_boxes(temp.gly, color = "grey90") +
ggplot2::geom_path() +
ggplot2::theme_bw() +
ggplot2::labs(x = "", y = "")
data(nasa)
nasaLate <- nasa[
nasa$date >= as.POSIXct("1998-01-01") &
nasa$lat >= 20 &
nasa$lat <= 40 &
nasa$long >= -80 &
nasa$long <= -60
, ]
temp.gly <- glyphs(nasaLate, "long", "day", "lat", "surftemp", height=2.5)
ggplot2::ggplot(temp.gly, ggplot2::aes(gx, gy, group = gid))
data(nasa)
nasaLate <- nasa[
nasa$date >= as.POSIXct("1998-01-01") &
nasa$lat >= 20 &
nasa$lat <= 40 &
nasa$long >= -80 &
nasa$long <= -60
, ]
temp.gly <- glyphs(nasaLate, "long", "day", "lat", "surftemp", height=2.5)
ggplot2::ggplot(temp.gly, ggplot2::aes(gx, gy, group = gid)) +
add_ref_lines(temp.gly, color = "grey90") +
add_ref_boxes(temp.gly, color = "grey90") +
ggplot2::geom_path() +
ggplot2::theme_bw() +
ggplot2::labs(x = "", y = "")
data(nasa)
nasaLate <- nasa[
nasa$date >= as.POSIXct("1998-01-01") &
nasa$lat >= 20 &
nasa$lat <= 40 &
nasa$long >= -80 &
nasa$long <= -60
, ]
temp.gly <- glyphs(nasaLate, "long", "day", "lat", "surftemp", height=2.5)
print(temp.gly)
data(nasa)
nasaLate <- nasa[
nasa$date >= as.POSIXct("1998-01-01") &
nasa$lat >= 20 &
nasa$lat <= 40 &
nasa$long >= -80 &
nasa$long <= -60
, ]
temp.gly <- glyphs(nasaLate, "long", "day", "lat", "surftemp", height=2.5)
ggplot2::ggplot(temp.gly, ggplot2::aes(gx, gy, group = gid)) +
add_ref_lines(temp.gly, color = "grey90") +
add_ref_boxes(temp.gly, color = "grey90")
data(nasa)
nasaLate <- nasa[
nasa$date >= as.POSIXct("1998-01-01") &
nasa$lat >= 20 &
nasa$lat <= 40 &
nasa$long >= -80 &
nasa$long <= -60
, ]
temp.gly <- glyphs(nasaLate, "long", "day", "lat", "surftemp", height=2.5)
ggplot2::ggplot(temp.gly, ggplot2::aes(gx, gy, group = gid)) +
add_ref_lines(temp.gly, color = "grey90") +
add_ref_boxes(temp.gly, color = "grey90") +
ggplot2::geom_path() +
ggplot2::theme_bw() +
ggplot2::labs(x = "", y = "")
data(nasa)
nasaLate <- nasa[
nasa$date >= as.POSIXct("1998-01-01") &
nasa$lat >= 20 &
nasa$lat <= 40 &
nasa$long >= -80 &
nasa$long <= -60
, ]
temp.gly <- glyphs(nasaLate, "long", "day", "lat", "surftemp", height=2.5)
ggplot2::ggplot(temp.gly, ggplot2::aes(gx, gy, group = gid)) +
add_ref_boxes(temp.gly, color = "grey90") +
ggplot2::geom_path() +
ggplot2::theme_bw() +
ggplot2::labs(x = "", y = "")
data(nasa)
nasaLate <- nasa[
nasa$date >= as.POSIXct("1998-01-01") &
nasa$lat >= 20 &
nasa$lat <= 40 &
nasa$long >= -80 &
nasa$long <= -60
, ]
temp.gly <- glyphs(nasaLate, "long", "day", "lat", "surftemp", height=2.5)
ggplot2::ggplot(temp.gly, ggplot2::aes(gx, gy, group = gid)) +
add_ref_lines(temp.gly, color = "grey90") +
add_ref_boxes(temp.gly, color = "grey90") +
ggplot2::geom_path() +
ggplot2::theme_bw() +
ggplot2::labs(x = "", y = "")
data(nasa)
nasaLate <- nasa[
nasa$date >= as.POSIXct("1998-01-01") &
nasa$lat >= 20 &
nasa$lat <= 40 &
nasa$long >= -80 &
nasa$long <= -60
, ]
temp.gly <- glyphs(nasaLate, "long", "day", "lat", "surftemp", height=2.5)
ggplot2::ggplot(temp.gly) +
add_ref_lines(temp.gly, color = "grey90") +
add_ref_boxes(temp.gly, color = "grey90") +
ggplot2::geom_path() +
ggplot2::theme_bw() +
ggplot2::labs(x = "", y = "")
data(nasa)
nasaLate <- nasa[
nasa$date >= as.POSIXct("1998-01-01") &
nasa$lat >= 20 &
nasa$lat <= 40 &
nasa$long >= -80 &
nasa$long <= -60
, ]
temp.gly <- glyphs(nasaLate, "long", "day", "lat", "surftemp", height=2.5)
ggplot2::ggplot(temp.gly, ggplot2::aes(gx, gy, group = gid)) +
add_ref_lines(temp.gly, color = "grey90") +
add_ref_boxes(temp.gly, color = "grey90") +
ggplot2::geom_path() +
ggplot2::theme_bw() +
ggplot2::labs(x = "", y = "")
library(sp)
attach(yellpratio)
# simple map
# plot Yellowstone shape files
plot(ynpstate.shp)
plot(ynplk.shp, add=T)
plot(ynprivers.shp, add=T)
points(Lon, Lat)
# stars plot for precipitation ratios
col.red <- rep("red",length(orstationc[,1]))
stars(yellpratio[,4:15], locations=as.matrix(cbind(Lon, Lat)),
col.stars=col.red, len=0.2, key.loc=c(-111.5,42.5), labels=NULL, add=T)
# NOT RUN {
require(grDevices)
stars(mtcars[, 1:7], key.loc = c(14, 2),
main = "Motor Trend Cars : stars(*, full = F)", full = FALSE)
stars(mtcars[, 1:7], key.loc = c(14, 1.5),
main = "Motor Trend Cars : full stars()", flip.labels = FALSE)
## 'Spider' or 'Radar' plot:
stars(mtcars[, 1:7], locations = c(0, 0), radius = FALSE,
key.loc = c(0, 0), main = "Motor Trend Cars", lty = 2)
## Segment Diagrams:
palette(rainbow(12, s = 0.6, v = 0.75))
stars(mtcars[, 1:7], len = 0.8, key.loc = c(12, 1.5),
main = "Motor Trend Cars", draw.segments = TRUE)
stars(mtcars[, 1:7], len = 0.6, key.loc = c(1.5, 0),
main = "Motor Trend Cars", draw.segments = TRUE,
frame.plot = TRUE, nrow = 4, cex = .7)
## scale linearly (not affinely) to [0, 1]
USJudge <- apply(USJudgeRatings, 2, function(x) x/max(x))
Jnam <- row.names(USJudgeRatings)
Snam <- abbreviate(substring(Jnam, 1, regexpr("[,.]",Jnam) - 1), 7)
stars(USJudge, labels = Jnam, scale = FALSE,
key.loc = c(13, 1.5), main = "Judge not ...", len = 0.8)
stars(USJudge, labels = Snam, scale = FALSE,
key.loc = c(13, 1.5), radius = FALSE)
loc <- stars(USJudge, labels = NULL, scale = FALSE,
radius = FALSE, frame.plot = TRUE,
key.loc = c(13, 1.5), main = "Judge not ...", len = 1.2)
text(loc, Snam, col = "blue", cex = 0.8, xpd = TRUE)
## 'Segments':
stars(USJudge, draw.segments = TRUE, scale = FALSE, key.loc = c(13,1.5))
## 'Spider':
stars(USJudgeRatings, locations = c(0, 0), scale = FALSE, radius  =  FALSE,
col.stars = 1:10, key.loc = c(0, 0), main = "US Judges rated")
## Same as above, but with colored lines instead of filled polygons.
stars(USJudgeRatings, locations = c(0, 0), scale = FALSE, radius  =  FALSE,
col.lines = 1:10, key.loc = c(0, 0), main = "US Judges rated")
## 'Radar-Segments'
stars(USJudgeRatings[1:10,], locations = 0:1, scale = FALSE,
draw.segments = TRUE, col.segments = 0, col.stars = 1:10, key.loc =  0:1,
main = "US Judges 1-10 ")
palette("default")
stars(cbind(1:16, 10*(16:1)), draw.segments = TRUE,
main = "A Joke -- do *not* use symbols on 2D data!")
# }
## 'Spider' or 'Radar' plot:
stars(mtcars[, 1:7], locations = c(0, 0), radius = FALSE,
key.loc = c(0, 0), main = "Motor Trend Cars", lty = 2)
# }
require(grDevices)
stars(mtcars[, 1:7], key.loc = c(14, 1.5),
main = "Motor Trend Cars : full stars()", flip.labels = FALSE)
require(grDevices)
stars(mtcars[, 1:7], key.loc = c(14, 1.5),
main = "Motor Trend Cars : full stars()")
View(temp.gly)
View(temp.gly)
require(grDevices)
stars(mtcars[, 1:4], key.loc = c(14, 1.5),
main = "Motor Trend Cars : full stars()")
require(grDevices)
x <- read.table('iris.csv',header=T,sep=",")
stars(mtcars[, 1:4], key.loc = c(14, 1.5),
main = "Motor Trend Cars : full stars()")
require(grDevices)
x <- read.table('iris.csv',header=T,sep=",")
stars(mtcars[, 1:4], key.loc = c(14, 1.5),
main = "Motor Trend Cars : full stars()")
require(grDevices)
x <- read.table('iris.csv',header=T,sep=",")
stars(x[, 1:4], key.loc = c(14, 1.5),
main = "Motor Trend Cars : full stars()")
require(grDevices)
x <- read.table('iris.csv',header=T,sep=",")
stars(x[, 1:4], key.loc = c(14, 1.5),
main = "Iris Data Set")
View(x)
